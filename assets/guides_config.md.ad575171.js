import{_ as t}from"./chunks/InspectorScript.d1d5d47c.js";import{_ as e,o,c as a,O as r}from"./chunks/framework.782c5d0d.js";const _=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"guides/config.md","filePath":"guides/config.md"}'),i={name:"guides/config.md"},n=r('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><h2 id="setting-the-path-for-storing-downloaded-models" tabindex="-1">Setting the path for storing downloaded models <a class="header-anchor" href="#setting-the-path-for-storing-downloaded-models" aria-label="Permalink to &quot;Setting the path for storing downloaded models&quot;">​</a></h2><blockquote><h3 id="steps" tabindex="-1">Steps: <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps:&quot;">​</a></h3><ol><li>Find <strong>_SCRIPT</strong> in the scene</li><li>Open the its&#39; inspector and look for <strong>Model Path</strong></li><li>Enter your custom absolute path <img src="'+t+'" alt="Inspector"></li><li>If no path is entered, default path will be used <strong>(C:\\Users\\ <u>User</u> \\AppData\\LocalLow\\DefaultCompany\\ <u>ProjectName </u> \\SketchfabModelCache)</strong></li></ol></blockquote><h2 id="setting-the-default-search-parameter" tabindex="-1">Setting the default search parameter <a class="header-anchor" href="#setting-the-default-search-parameter" aria-label="Permalink to &quot;Setting the default search parameter&quot;">​</a></h2><blockquote><h3 id="steps-1" tabindex="-1">Steps: <a class="header-anchor" href="#steps-1" aria-label="Permalink to &quot;Steps:&quot;">​</a></h3><ol><li>Find <strong>_SCRIPT</strong> in the scene</li><li>Open the its&#39; inspector and look for <strong>Model Path</strong><img src="'+t+'" alt="Inspector"></li><li>Input the settings <table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>Max Vertex Count</td><td>Upper limit of vertex of a model</td></tr><tr><td>Min faces Count</td><td>lower limit of faces of a model</td></tr><tr><td>Max face Count</td><td>Upper limit of faces of a model</td></tr><tr><td>Max Textures Resolution</td><td>Upper limit of texture resolution</td></tr><tr><td>Length of Modellist</td><td>the number of model in the list</td></tr></tbody></table></li></ol></blockquote>',5),s=[n];function l(d,h,c,f,u,p){return o(),a("div",null,s)}const b=e(i,[["render",l]]);export{_ as __pageData,b as default};
